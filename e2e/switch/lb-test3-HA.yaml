# deployment
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: load-balancer-example3
  name: load-balancer-example3
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      run: load-balancer-example3
  template:
    metadata:
      labels:
        run: load-balancer-example3
    spec:
      containers:
        - image: gcr.io/google-samples/node-hello:1.0
          imagePullPolicy: IfNotPresent
          name: load-balancer-example3
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
      restartPolicy: Always
---
# service
apiVersion: v1
kind: Service
metadata:
  name: load-balancer-example3
  namespace: default
  labels:
    run: load-balancer-example3
  annotations:
    k8s.usacloud.jp/load-balancer-type: "switch"
    k8s.usacloud.jp/load-balancer-ip-range: "10.240.0.0/16"
    k8s.usacloud.jp/load-balancer-assign-ip-range: "10.240.100.0/24"
    k8s.usacloud.jp/load-balancer-assign-default-gateway: "10.240.0.1"
    k8s.usacloud.jp/load-balancer-ha: "true"
    k8s.usacloud.jp/load-balancer-plan: "premium"
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    run: load-balancer-example3
  type: LoadBalancer3
