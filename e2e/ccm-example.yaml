---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cloud-controller-manager
  name: cloud-controller-manager
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: cloud-controller-manager
    spec:
      dnsPolicy: Default
      hostNetwork: true
      serviceAccountName: cloud-controller-manager
      containers:
      - name: cloud-controller-manager
        image: sacloud/sakura-cloud-controller-manager:latest
        command:
        - /usr/local/bin/sakura-cloud-controller-manager
        - --cloud-provider=sakuracloud
        - --leader-elect=true
        - --use-service-account-credentials=false
        - --allocate-node-cidrs=false
        - --configure-cloud-routes=false
        env:
        - name: SAKURACLOUD_ACCESS_TOKEN
          value: "<put-your-token>"
        - name: SAKURACLOUD_ACCESS_TOKEN_SECRET
          value: "<put-your-secret>"
        - name: SAKURACLOUD_ZONE
          value: "<zone>"
        - name: SAKURACLOUD_CLUSTER_ID
          value: "ccm-test"
      tolerations:
      # this is required so CCM can bootstrap itself
      - key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
        effect: NoSchedule
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      # this is to have the daemonset runnable on master nodes
      # the taint may vary depending on your cluster setup
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      # this is to restrict CCM to only run on master nodes
      # the node selector may vary depending on your cluster setup
      nodeSelector:
        node-role.kubernetes.io/master: ""
